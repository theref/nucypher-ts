"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Introduction","href":"/nucypher-ts/","docId":"Introduction"},{"type":"link","label":"Condition-Based Decryption","href":"/nucypher-ts/cbd","docId":"CBD"},{"type":"link","label":"Proxy Re-Encryption","href":"/nucypher-ts/pre","docId":"PRE"}],"collapsed":true,"collapsible":true},{"type":"category","label":"How-to Guides","items":[{"type":"link","label":"Create Security Optionality With Re-usable Cohorts","href":"/nucypher-ts/reusable_cohort","docId":"ReUsableCohort"},{"type":"link","label":"Implement Revocation with a Smart Contract","href":"/nucypher-ts/revocation_smart_contract","docId":"RevocationSmartContract"},{"type":"link","label":"Contribution Guide","href":"/nucypher-ts/Contributing.md","docId":"Contributing"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Reference","items":[{"type":"category","label":"SDK","items":[{"type":"link","label":"Cohort","href":"/nucypher-ts/cohort","docId":"Cohort"},{"type":"link","label":"Conditions","href":"/nucypher-ts/conditions","docId":"Conditions"},{"type":"link","label":"Condition Set","href":"/nucypher-ts/condition_set","docId":"ConditionSet"},{"type":"link","label":"Strategy","href":"/nucypher-ts/strategy","docId":"Strategy"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Glossary","href":"/nucypher-ts/Glossary.md","docId":"Glossary"}],"collapsed":true,"collapsible":true}]},"docs":{"CBD":{"id":"CBD","title":"Condition-Based Decryption","description":"Condition-Based Decryption (CBD) is a programmable access control service, in which decryption rights are based on the verified fulfillment of predefined conditions.","sidebar":"tutorialSidebar"},"Cohort":{"id":"Cohort","title":"Cohort","description":"Cohort.create","sidebar":"tutorialSidebar"},"Conditions":{"id":"Conditions","title":"Conditions","description":"Several types of access conditions can be defined:","sidebar":"tutorialSidebar"},"ConditionSet":{"id":"ConditionSet","title":"Condition Set","description":"Conditions can be combined into Condition Sets using AND and OR operators.","sidebar":"tutorialSidebar"},"Contributing":{"id":"Contributing","title":"Contribution Guide","description":"Download, install, build, and test with:","sidebar":"tutorialSidebar"},"Glossary":{"id":"Glossary","title":"Glossary","description":"Re-Encryption Key","sidebar":"tutorialSidebar"},"Introduction":{"id":"Introduction","title":"Introduction","description":"nucypher-ts is a typescript library to allow developers to interact with core Nucypher functionality within the browser.","sidebar":"tutorialSidebar"},"PRE":{"id":"PRE","title":"Proxy Re-Encryption","description":"","sidebar":"tutorialSidebar"},"ReUsableCohort":{"id":"ReUsableCohort","title":"Create Security Optionality With Re-usable Cohorts","description":"Providing configurable security to your users is easy with re-usable Cohorts.","sidebar":"tutorialSidebar"},"Revocation":{"id":"Revocation","title":"Revocation","description":"Revocation is under active development and is not currently considered stable."},"RevocationSmartContract":{"id":"RevocationSmartContract","title":"Implement Revocation with a Smart Contract","description":"It is possible to implement Revocation using Conditions that rely on a function call to a Custom Smart Contract.","sidebar":"tutorialSidebar"},"SDK":{"id":"SDK","title":"SDK","description":""},"Strategy":{"id":"Strategy","title":"Strategy","description":"A Strategy combines all possible configuration parameters for using CBD.","sidebar":"tutorialSidebar"}}}')}}]);