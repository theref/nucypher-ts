"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[912],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(t),m=o,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||a;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2567:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=t(7462),o=(t(7294),t(3905));const a={slug:"condition_set"},i="Condition Set",c={unversionedId:"ConditionSet",id:"ConditionSet",title:"Condition Set",description:"Conditions can be combined into Condition Sets using AND and OR operators.",source:"@site/docs/ConditionSet.md",sourceDirName:".",slug:"/condition_set",permalink:"/nucypher-ts/condition_set",draft:!1,tags:[],version:"current",frontMatter:{slug:"condition_set"},sidebar:"tutorialSidebar",previous:{title:"Conditions",permalink:"/nucypher-ts/conditions"},next:{title:"Strategy",permalink:"/nucypher-ts/strategy"}},s={},d=[],l={toc:d};function p(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"condition-set"},"Condition Set"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"./conditions"},"Conditions")," can be combined into Condition Sets using ",(0,o.kt)("inlineCode",{parentName:"p"},"AND")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"OR")," operators."),(0,o.kt)("p",null,"The below example shows how to authenticate that a requester owns an NFT in one of two different collections."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const genuineUndead = new Conditions.ERC721Balance({\n  contractAddress: '0x209e639a0EC166Ac7a1A4bA41968fa967dB30221',\n});\nconst gnomePals = new Conditions.ERC721Balance({\n  contractAddress: '0x5dB11d7356aa4C0E85Aa5b255eC2B5F81De6d4dA',\n});\nconst NFTConditionSet = new ConditionSet([\n  genuineUndead,\n  Operator.OR(),\n  gnomePals,\n]);\n")),(0,o.kt)("p",null,"If we wanted to store this Condition Set for later use we could export it to JSON:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const NFTConditionSetJSON = NFTConditionSet.toJSON();\nconsole.log(NFTConditionSetJSON);\n// [\n//     {\n//         "chain": "ethereum",\n//         "method": "balanceOf",\n//         "parameters": [\n//             ":userAddress"\n//         ],\n//         "standardContractType": "ERC721",\n//         "returnValueTest": {\n//             "comparator": ">",\n//             "value": "0"\n//         },\n//         "contractAddress": "0x209e639a0EC166Ac7a1A4bA41968fa967dB30221"\n//     },\n//     {\n//         "operator": "or"\n//     },\n//     {\n//         "chain": "ethereum",\n//         "method": "balanceOf",\n//         "parameters": [\n//             ":userAddress"\n//         ],\n//         "standardContractType": "ERC721",\n//         "returnValueTest": {\n//             "comparator": ">",\n//             "value": "0"\n//         },\n//         "contractAddress": "0x5dB11d7356aa4C0E85Aa5b255eC2B5F81De6d4dA"\n//     }\n// ]\n')),(0,o.kt)("p",null,"And then easily import:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const newConditionSet = ConditionSet.fromJSON(NFTConditionSetJSON);\n")))}p.isMDXComponent=!0}}]);